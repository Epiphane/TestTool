/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'andy' at '10/9/15 11:18 AM' with Gradle 2.7
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.7/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'com.google.guava:guava:12.0'
}

// stolen from: http://stackoverflow.com/questions/24997441/delombok-using-gradle
task delombok {
    ext.outputDir = "${buildDir}/src-delomboked"

    inputs.files sourceSets.main.java
    outputs.dir file(outputDir)

    doLast {
        description 'Delomboks the source code'
        ant.taskdef(classname: 'lombok.delombok.ant.Tasks$Delombok', classpath: configurations.compile.asPath, name: 'delombok')
        ant.mkdir(dir: outputDir)
        ant.delombok(to: outputDir, from: 'src/main/java', classpath: configurations.compile.asPath)
    }
}

task compileDelombok(type: JavaCompile, dependsOn: delombok) {
    def outputDir = "${buildDir}/classes-delomboked/main"
    def sourceFiles = fileTree(dir: delombok.outputDir, include: '**/*.java')

    inputs.files sourceFiles
    outputs.dir file(outputDir)

    source = sourceFiles
    destinationDir = file(outputDir)
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    dependencyCacheDir = file("${buildDir}/dependency-cache")
    classpath = files(outputDir, configurations.compile.asPath)
}

javadoc {
    dependsOn compileDelombok
    source = delombok.outputDir
    options {
        quiet()
    }
}


